Option Explicit
' clear contents from All Schedules Sheet
Public Sub clearAllSched()
    Sheets("All Schedules").range("AllSchedTherapistInitialsBox").value = ""
    Sheets("All Schedules").range("RoomsAllSchedules").ClearContents
    Sheets("All Schedules").range("AllSchedDataGrid").ClearContents
    Sheets("All Schedules").range("AllSchedNoteAreas").ClearContents
     Sheets("All Schedules").range("$AD$8:$AD$11").ClearContents
End Sub
' clear all data in diddies
Public Sub clearDiddies()
Dim clearArea As range
Dim cell As range

Sheets("NewDiddies").range("AllDiddiesRooms").ClearContents
For Each cell In Sheets("NewDiddies").range("AllDiddiesSchedRange")
    cell.MergeArea.ClearContents
    
Next cell
 
End Sub

' get string value from cell and extract and return initials
Public Function checkValue(value As String) As String
    Dim initialsDict As Object
    Dim initialsCell As range
    Dim initials As Variant
    Dim nameAndProf As String
    Dim grayOptionsDict As Object
    Dim grayCounter As Integer
    Dim cell As range
    Dim grayOpt As Variant
    Dim newValue As String
    
    
    ' create initials dictionary object
    Set initialsDict = CreateObject("Scripting.Dictionary")

    ' loop through all therapists to get initials, name and profession; add to dictionary
    ' key = initials; value = name + profession
    For Each initialsCell In Sheets("All Therapists").range("AllTherapistsInitials")
        If Not IsEmpty(initialsCell) And initialsCell.value <> "-" Then
            initials = initialsCell.value
            nameAndProf = initialsCell.Offset(0, 3) & " " & initialsCell.Offset(0, 2)
            initialsDict.Add Key:=initials, Item:=nameAndProf
        End If
    Next initialsCell
    
    ' create initials dictionary object
    Set grayOptionsDict = CreateObject("Scripting.Dictionary")
    
    ' set grayOption counter to use as arbitrary value for dictionary
    grayCounter = 1
    
    ' loop through 3W gray options and add to dictionary
    For Each cell In Sheets("3W Schedule").range("GrayOptions3W")
        If Not IsEmpty(cell) And cell.value <> " " And Not grayOptionsDict.Exists(cell.value) Then
            grayOptionsDict.Add Key:=cell.value, Item:=grayCounter
            grayCounter = grayCounter + 1
        End If
    Next cell
    
    ' loop through 8P gray options and add to dictionary
    For Each cell In Sheets("8P Schedule").range("GrayOptions8P")
        If Not IsEmpty(cell) And cell.value <> " " And Not grayOptionsDict.Exists(cell.value) Then
            grayOptionsDict.Add Key:=cell.value, Item:=grayCounter
            grayCounter = grayCounter + 1
        End If
    Next cell
    
    ' loop through 3P gray options and add to dictionary
    For Each cell In Sheets("3P Schedule").range("GrayOptions3P")
        If Not IsEmpty(cell) And cell.value <> " " And Not grayOptionsDict.Exists(cell.value) Then
            grayOptionsDict.Add Key:=cell.value, Item:=grayCounter
            grayCounter = grayCounter + 1
        End If
    Next cell
    
    ' account for possible spaces in lunch cell
    If LCase(value) = "lunch" Or LCase(value) = " lunch" Or LCase(value) = "lunch " Then
        checkValue = "LUNCH"
    ElseIf grayOptionsDict.Exists(value) Then
        checkValue = "NONE"
    Else
        'extract and return initials
        If Len(value) > 3 Then
            If Len(value) > 5 Then
                newValue = Right(value, 3)
                newValue = Replace(newValue, " ", "")
                checkValue = initialsDict(newValue)
            Else
                newValue = Right(value, 2)
                checkValue = initialsDict(newValue)
            End If
    
        Else
            checkValue = initialsDict(value)
        End If
    End If
    
    ' reset initials dictionary
    Set initialsDict = Nothing
     ' reset gray options dictionary
    Set grayOptionsDict = Nothing
End Function

' takes a range and displays the last time a call was made to this procedure
' used to keep track of when schedules and diddies were last created
Public Sub lastTimeCreated(range)
   Dim timeDate As Variant
   timeDate = Now()
   range.value = timeDate
End Sub
